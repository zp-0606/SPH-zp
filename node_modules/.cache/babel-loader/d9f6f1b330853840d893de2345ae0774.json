{"ast":null,"code":"import _asyncToGenerator from \"E:/VueProject/project-SPH/app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport { reqGetSearchInfo } from \"@/api\";\nvar state = {\n  searchList: {}\n};\nvar mutations = {\n  GETSEARCHLIST: function GETSEARCHLIST(state, searchList) {\n    state.searchList = searchList;\n  }\n};\nvar actions = {\n  getSearchList: function getSearchList(_ref) {\n    var _arguments = arguments;\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var commit, params, result;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              params = _arguments.length > 1 && _arguments[1] !== undefined ? _arguments[1] : {};\n              _context.next = 4;\n              return reqGetSearchInfo(params);\n\n            case 4:\n              result = _context.sent;\n\n              if (result.code == 200) {\n                commit('GETSEARCHLIST', result.data);\n              }\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  }\n};\nvar getters = {\n  attrsList: function attrsList(state) {\n    return state.searchList.attrsList || [];\n  },\n  goodsList: function goodsList(state) {\n    return state.searchList.goodsList || [];\n  },\n  trademarkList: function trademarkList(state) {\n    return state.searchList.trademarkList || [];\n  }\n};\nexport default {\n  state: state,\n  mutations: mutations,\n  actions: actions,\n  getters: getters\n};","map":null,"metadata":{},"sourceType":"module"}