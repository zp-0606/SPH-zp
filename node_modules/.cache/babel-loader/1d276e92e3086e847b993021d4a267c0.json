{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from \"vuex\";\nexport default {\n  name: \"Trade\",\n\n  data() {\n    return {\n      msg: \"\",\n      orderId: \"\"\n    };\n  },\n\n  mounted() {\n    this.$store.dispatch(\"getAddressInfo\");\n    this.$store.dispatch(\"getUserOrderInfo\");\n  },\n\n  computed: { ...mapState({\n      addressInfo: state => state.trade.addressInfo,\n      orderInfo: state => state.trade.userOrderInfo\n    }),\n\n    userDefaultAddress() {\n      return this.addressInfo.find(item => item.isDefault == 1) || {};\n    }\n\n  },\n  methods: {\n    changeDefaultAddress(address, addressInfo) {\n      addressInfo.forEach(item => item.isDefault = 0);\n      address.isDefault = 1;\n    },\n\n    async submitOrder() {\n      let {\n        tradeNo\n      } = this.orderInfo;\n      let data = {\n        consignee: this.userDefaultAddress.consignee,\n        consigneeTel: this.userDefaultAddress.phoneNum,\n        deliveryAddress: this.userDefaultAddress.fullAddress,\n        paymentWay: \"ONLINE\",\n        orderComment: this.msg,\n        orderDetailList: this.orderInfo.detailArrayList\n      };\n      let result = await this.$API.reqSubmitOrder(tradeNo, data);\n\n      if (result.code == 200) {\n        this.orderId = result.data;\n        this.$router.push(\"/pay?orderId=\" + this.orderId);\n      } else {\n        alert(result.data);\n      }\n    }\n\n  }\n};","map":null,"metadata":{},"sourceType":"module"}