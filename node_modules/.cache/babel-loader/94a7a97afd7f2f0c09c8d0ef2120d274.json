{"ast":null,"code":"!function (n, e) {\n  \"object\" == typeof exports && \"undefined\" != typeof module ? module.exports = e() : \"function\" == typeof define && define.amd ? define(e) : ((n = n || self).__vee_validate_locale__zh_CN = n.__vee_validate_locale__zh_CN || {}, n.__vee_validate_locale__zh_CN.js = e());\n}(this, function () {\n  \"use strict\";\n\n  var n,\n      e = {\n    name: \"zh_CN\",\n    messages: {\n      _default: function (n) {\n        return n + \"的值无效\";\n      },\n      after: function (n, e) {\n        var t = e[0];\n        return n + \"必须在\" + t + \"之后\" + (e[1] ? \"或等于\" + t : \"\");\n      },\n      alpha: function (n) {\n        return n + \"只能包含字母字符\";\n      },\n      alpha_dash: function (n) {\n        return n + \"能够包含字母数字字符、破折号和下划线\";\n      },\n      alpha_num: function (n) {\n        return n + \"只能包含字母数字字符\";\n      },\n      alpha_spaces: function (n) {\n        return n + \"只能包含字母字符和空格\";\n      },\n      before: function (n, e) {\n        var t = e[0];\n        return n + \"必须在\" + t + \"之前\" + (e[1] ? \"或等于\" + t : \"\");\n      },\n      between: function (n, e) {\n        return n + \"必须在\" + e[0] + \"与\" + e[1] + \"之间\";\n      },\n      confirmed: function (n, e) {\n        return n + \"不能和\" + e[0] + \"匹配\";\n      },\n      credit_card: function (n) {\n        return n + \"的格式错误\";\n      },\n      date_between: function (n, e) {\n        return n + \"必须在\" + e[0] + \"和\" + e[1] + \"之间\";\n      },\n      date_format: function (n, e) {\n        return n + \"必须符合\" + e[0] + \"格式\";\n      },\n      decimal: function (n, e) {\n        void 0 === e && (e = []);\n        var t = e[0];\n        return void 0 === t && (t = \"*\"), n + \"必须是数字，且能够保留\" + (\"*\" === t ? \"\" : t) + \"位小数\";\n      },\n      digits: function (n, e) {\n        return n + \"必须是数字，且精确到\" + e[0] + \"位数\";\n      },\n      dimensions: function (n, e) {\n        return n + \"必须在\" + e[0] + \"像素与\" + e[1] + \"像素之间\";\n      },\n      email: function (n) {\n        return n + \"不是一个有效的邮箱\";\n      },\n      excluded: function (n) {\n        return n + \"不是一个有效值\";\n      },\n      ext: function (n) {\n        return n + \"不是一个有效的文件\";\n      },\n      image: function (n) {\n        return n + \"不是一张有效的图片\";\n      },\n      included: function (n) {\n        return n + \"不是一个有效值\";\n      },\n      integer: function (n) {\n        return n + \"必须是整数\";\n      },\n      ip: function (n) {\n        return n + \"不是一个有效的地址\";\n      },\n      length: function (n, e) {\n        var t = e[0],\n            r = e[1];\n        return r ? n + \"长度必须在\" + t + \"到\" + r + \"之间\" : n + \"长度必须为\" + t;\n      },\n      max: function (n, e) {\n        return n + \"不能超过\" + e[0] + \"个字符\";\n      },\n      max_value: function (n, e) {\n        return n + \"必须小于或等于\" + e[0];\n      },\n      mimes: function (n) {\n        return n + \"不是一个有效的文件类型\";\n      },\n      min: function (n, e) {\n        return n + \"必须至少有\" + e[0] + \"个字符\";\n      },\n      min_value: function (n, e) {\n        return n + \"必须大于或等于\" + e[0];\n      },\n      numeric: function (n) {\n        return n + \"只能包含数字字符\";\n      },\n      regex: function (n) {\n        return n + \"格式无效\";\n      },\n      required: function (n) {\n        return n + \"是必须的\";\n      },\n      size: function (n, e) {\n        return n + \"必须小于\" + function (n) {\n          var e = 1024,\n              t = 0 === (n = Number(n) * e) ? 0 : Math.floor(Math.log(n) / Math.log(e));\n          return 1 * (n / Math.pow(e, t)).toFixed(2) + \" \" + [\"Byte\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"][t];\n        }(e[0]);\n      },\n      url: function (n) {\n        return n + \"不是一个有效的url\";\n      }\n    },\n    attributes: {}\n  };\n  return \"undefined\" != typeof VeeValidate && VeeValidate.Validator.localize(((n = {})[e.name] = e, n)), e;\n});","map":null,"metadata":{},"sourceType":"script"}