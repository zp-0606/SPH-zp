{"ast":null,"code":"import _asyncToGenerator from \"E:/VueProject/project-SPH/app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport { reqGetCode, reqUserRegister, reqUserLogin, reqGetUserInfo, reqLogOut } from \"@/api\";\nimport { setToken, getToken, removeToken } from \"@/utils/token\";\nvar state = {\n  code: '',\n  token: getToken(),\n  userInfo: {}\n};\nvar mutations = {\n  GETCODE: function GETCODE(state, code) {\n    state.code = code;\n  },\n  USERLOGIN: function USERLOGIN(state, token) {\n    state.token = token;\n  },\n  GETUSERINFO: function GETUSERINFO(state, userInfo) {\n    state.userInfo = userInfo;\n  },\n  CLEAR: function CLEAR(state) {\n    state.token = '';\n    state.userInfo = {};\n  }\n};\nvar actions = {\n  getCode: function getCode(_ref, phone) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var commit, result;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              _context.next = 3;\n              return reqGetCode(phone);\n\n            case 3:\n              result = _context.sent;\n\n              if (!(result.code == 200)) {\n                _context.next = 9;\n                break;\n              }\n\n              commit('GETCODE', result.data);\n              return _context.abrupt(\"return\", 'ok');\n\n            case 9:\n              return _context.abrupt(\"return\", Promise.reject(new Error('faile')));\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  userRegister: function userRegister(_ref2, data) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n      var commit, result;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref2.commit;\n              _context2.next = 3;\n              return reqUserRegister(data);\n\n            case 3:\n              result = _context2.sent;\n\n              if (!(result.code == 200)) {\n                _context2.next = 8;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", 'ok');\n\n            case 8:\n              return _context2.abrupt(\"return\", Promise.reject(new Error('注册失败')));\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }))();\n  },\n  userLogin: function userLogin(_ref3, data) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n      var commit, result;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              commit = _ref3.commit;\n              _context3.next = 3;\n              return reqUserLogin(data);\n\n            case 3:\n              result = _context3.sent;\n\n              if (!(result.code == 200)) {\n                _context3.next = 10;\n                break;\n              }\n\n              commit('USERLOGIN', result.data.token);\n              setToken(result.data.token);\n              return _context3.abrupt(\"return\", 'ok');\n\n            case 10:\n              return _context3.abrupt(\"return\", Promise.reject(new Error('登录失败')));\n\n            case 11:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }))();\n  },\n  getUserInfo: function getUserInfo(_ref4) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n      var commit, result;\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              commit = _ref4.commit;\n              _context4.next = 3;\n              return reqGetUserInfo();\n\n            case 3:\n              result = _context4.sent;\n\n              if (!(result.code == 200)) {\n                _context4.next = 9;\n                break;\n              }\n\n              commit('GETUSERINFO', result.data);\n              return _context4.abrupt(\"return\", 'ok');\n\n            case 9:\n              return _context4.abrupt(\"return\", Promise.reject(new Error('faile')));\n\n            case 10:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }))();\n  },\n  userLogOut: function userLogOut(_ref5) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n      var commit, result;\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              commit = _ref5.commit;\n              _context5.next = 3;\n              return reqLogOut();\n\n            case 3:\n              result = _context5.sent;\n\n              if (!(result.code == 200)) {\n                _context5.next = 9;\n                break;\n              }\n\n              commit('CLEAR');\n              return _context5.abrupt(\"return\", 'ok');\n\n            case 9:\n              return _context5.abrupt(\"return\", Promise.reject(new Error('faile')));\n\n            case 10:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }))();\n  }\n};\nvar getters = {};\nexport default {\n  state: state,\n  mutations: mutations,\n  actions: actions,\n  getters: getters\n};","map":{"version":3,"sources":["E:/VueProject/project-SPH/app/src/store/user/index.js"],"names":["reqGetCode","reqUserRegister","reqUserLogin","reqGetUserInfo","reqLogOut","setToken","getToken","removeToken","state","code","token","userInfo","mutations","GETCODE","USERLOGIN","GETUSERINFO","CLEAR","actions","getCode","phone","commit","result","data","Promise","reject","Error","userRegister","userLogin","getUserInfo","userLogOut","getters"],"mappings":"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","sourcesContent":["import { reqGetCode, reqUserRegister, reqUserLogin, reqGetUserInfo,reqLogOut } from \"@/api\"\r\nimport { setToken,getToken,removeToken } from \"@/utils/token\"\r\nconst state = {\r\n    code: '',\r\n    token: getToken(),\r\n    userInfo:{}\r\n}\r\nconst mutations = {\r\n    GETCODE(state, code) {\r\n        state.code=code\r\n    },\r\n    USERLOGIN(state, token) {\r\n        state.token=token\r\n    },\r\n    GETUSERINFO(state, userInfo) {\r\n        state.userInfo=userInfo\r\n    },\r\n    CLEAR(state) {\r\n        state.token = ''\r\n        state.userInfo={}\r\n    }\r\n}\r\nconst actions = {\r\n    async getCode({ commit }, phone) {\r\n        let result = await reqGetCode(phone)\r\n        if (result.code == 200) {\r\n            commit('GETCODE', result.data)\r\n            return 'ok'\r\n        } else {\r\n            return Promise.reject(new Error('faile'))\r\n        }\r\n    },\r\n    async userRegister({ commit }, data) {\r\n        let result = await reqUserRegister(data)\r\n        if (result.code == 200) {\r\n            return 'ok'\r\n        } else {\r\n            return Promise.reject(new Error('注册失败'))\r\n        }\r\n    },\r\n    async userLogin({ commit }, data) {\r\n        let result = await reqUserLogin(data)\r\n        if (result.code == 200) {\r\n            commit('USERLOGIN', result.data.token)\r\n            setToken(result.data.token)\r\n            return 'ok'\r\n        } else {\r\n            return Promise.reject(new Error('登录失败'))\r\n        }\r\n    },\r\n   async getUserInfo({ commit }) {\r\n        let result = await reqGetUserInfo()\r\n       if (result.code == 200) {\r\n           commit('GETUSERINFO', result.data)\r\n           return 'ok'\r\n       } else {\r\n           return Promise.reject(new Error('faile'))\r\n        }\r\n    },\r\n    async userLogOut({ commit }) {\r\n        let result = await reqLogOut()\r\n        if (result.code == 200) {\r\n            commit('CLEAR')\r\n            return 'ok'\r\n        } else {\r\n            return Promise.reject(new Error('faile'))\r\n        }\r\n    }\r\n}\r\nconst getters = {}\r\nexport default {\r\n    state,mutations,actions,getters\r\n}\r\n"]},"metadata":{},"sourceType":"module"}