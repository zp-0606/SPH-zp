{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport axios from \"axios\";\nimport nprogress from \"nprogress\";\nimport 'nprogress/nprogress.css';\nimport store from \"@/store\";\nvar requests = axios.create({\n  baseURL: \"/api\",\n  timeout: 5000\n});\nrequests.interceptors.request.use(function (config) {\n  if (store.state) // 进度条开始\n    nprogress.start();\n  return config;\n});\nrequests.interceptors.response.use(function (res) {\n  // 进度条结束\n  nprogress.done();\n  return res.data;\n}, function (error) {\n  return Promise.reject(new Error('false'));\n});\nexport default requests;","map":{"version":3,"sources":["E:/VueProject/project-SPH/app/src/api/request.js"],"names":["axios","nprogress","store","requests","create","baseURL","timeout","interceptors","request","use","config","state","start","response","res","done","data","error","Promise","reject","Error"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,OAAO,yBAAP;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,IAAMC,QAAQ,GAAGH,KAAK,CAACI,MAAN,CAAa;AAC1BC,EAAAA,OAAO,EAAE,MADiB;AAE1BC,EAAAA,OAAO,EAAE;AAFiB,CAAb,CAAjB;AAIAH,QAAQ,CAACI,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CAAkC,UAACC,MAAD,EAAY;AAC1C,MAAGR,KAAK,CAACS,KAAT,EACA;AACAV,IAAAA,SAAS,CAACW,KAAV;AACA,SAAOF,MAAP;AACH,CALD;AAMAP,QAAQ,CAACI,YAAT,CAAsBM,QAAtB,CAA+BJ,GAA/B,CAAmC,UAACK,GAAD,EAAS;AACxC;AACAb,EAAAA,SAAS,CAACc,IAAV;AACA,SAAOD,GAAG,CAACE,IAAX;AACH,CAJD,EAIG,UAACC,KAAD,EAAW;AACV,SAAOC,OAAO,CAACC,MAAR,CAAe,IAAIC,KAAJ,CAAU,OAAV,CAAf,CAAP;AACH,CAND;AAOA,eAAejB,QAAf","sourcesContent":["import axios from \"axios\";\r\nimport nprogress from \"nprogress\";\r\nimport 'nprogress/nprogress.css'\r\nimport store from \"@/store\";\r\nconst requests = axios.create({\r\n    baseURL: \"/api\",\r\n    timeout: 5000\r\n});\r\nrequests.interceptors.request.use((config) => {\r\n    if(store.state)\r\n    // 进度条开始\r\n    nprogress.start()\r\n    return config\r\n});\r\nrequests.interceptors.response.use((res) => {\r\n    // 进度条结束\r\n    nprogress.done()\r\n    return res.data;\r\n}, (error) => {\r\n    return Promise.reject(new Error('false'));\r\n});\r\nexport default requests;"]},"metadata":{},"sourceType":"module"}