{"ast":null,"code":"import Vue from 'vue';\nimport VueRouter from 'vue-router';\nimport routes from './routes';\nimport store from '@/store';\nVue.use(VueRouter);\nlet originPush = VueRouter.prototype.push;\nlet originReplace = VueRouter.prototype.replace;\n\nVueRouter.prototype.push = function (location, resolve, reject) {\n  if (resolve && reject) {\n    originPush.call(this, location, resolve, reject);\n  } else {\n    originPush.call(this, location, () => {}, () => {});\n  }\n};\n\nVueRouter.prototype.replace = function (location, resolve, reject) {\n  if (resolve && reject) {\n    originReplace.call(this, location, resolve, reject);\n  } else {\n    originReplace.call(this, location, () => {}, () => {});\n  }\n};\n\nlet router = new VueRouter({\n  routes,\n\n  scrollBehavior(to, from, savePosition) {\n    return {\n      y: 0\n    };\n  }\n\n});\nrouter.beforeEach(async (to, from, next) => {\n  let token = store.state.user.token;\n  let username = store.state.user.userInfo.name;\n\n  if (token) {\n    if (to.path == '/login' || to.path == '/register') {\n      next('/');\n    } else {\n      if (username) {\n        next();\n      } else {\n        try {\n          await store.dispatch('getUserInfo');\n          next();\n        } catch (error) {\n          await store.dispatch('userLogOut');\n          next('/login');\n        }\n      }\n    }\n  } else {\n    let toPath = to.path;\n\n    if (toPath.indexOf('/pay') != -1 || toPath.indexOf('/trade') != -1 || toPath.indexOf('/center') != -1) {\n      next('/login?redirect=' + toPath);\n    } else {\n      next();\n    }\n  }\n});\nexport default router;","map":null,"metadata":{},"sourceType":"module"}