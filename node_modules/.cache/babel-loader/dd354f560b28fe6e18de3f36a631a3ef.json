{"ast":null,"code":"import _asyncToGenerator from \"E:/VueProject/project-SPH/app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport { reqGetCode, reqUserRegister, reqUserLogin } from \"@/api\";\nvar state = {\n  code: ''\n};\nvar mutations = {\n  GETCODE: function GETCODE(state, code) {\n    state.code = code;\n  }\n};\nvar actions = {\n  getCode: function getCode(_ref, phone) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var commit, result;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              _context.next = 3;\n              return reqGetCode(phone);\n\n            case 3:\n              result = _context.sent;\n\n              if (!(result.code == 200)) {\n                _context.next = 9;\n                break;\n              }\n\n              commit('GETCODE', result.data);\n              return _context.abrupt(\"return\", 'ok');\n\n            case 9:\n              return _context.abrupt(\"return\", Promise.reject(new Error('faile')));\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  userRegister: function userRegister(_ref2, data) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n      var commit, result;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref2.commit;\n              _context2.next = 3;\n              return reqUserRegister(data);\n\n            case 3:\n              result = _context2.sent;\n\n              if (!(result.code == 200)) {\n                _context2.next = 8;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", 'ok');\n\n            case 8:\n              return _context2.abrupt(\"return\", Promise.reject(new Error('注册失败')));\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }))();\n  },\n  userLogin: function userLogin(_ref3, data) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n      var commit, result;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              commit = _ref3.commit;\n              _context3.next = 3;\n              return reqUserLogin(data);\n\n            case 3:\n              result = _context3.sent;\n\n              if (!(result.code == 200)) {\n                _context3.next = 9;\n                break;\n              }\n\n              commit('USER');\n              return _context3.abrupt(\"return\", 'ok');\n\n            case 9:\n              return _context3.abrupt(\"return\", Promise.reject(new Error('登录失败')));\n\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }))();\n  }\n};\nvar getters = {};\nexport default {\n  state: state,\n  mutations: mutations,\n  actions: actions,\n  getters: getters\n};","map":{"version":3,"sources":["E:/VueProject/project-SPH/app/src/store/user/index.js"],"names":["reqGetCode","reqUserRegister","reqUserLogin","state","code","mutations","GETCODE","actions","getCode","phone","commit","result","data","Promise","reject","Error","userRegister","userLogin","getters"],"mappings":";;;;AAAA,SAASA,UAAT,EAAoBC,eAApB,EAAoCC,YAApC,QAAwD,OAAxD;AACA,IAAMC,KAAK,GAAG;AACVC,EAAAA,IAAI,EAAC;AADK,CAAd;AAGA,IAAMC,SAAS,GAAG;AACdC,EAAAA,OADc,mBACNH,KADM,EACCC,IADD,EACO;AACjBD,IAAAA,KAAK,CAACC,IAAN,GAAWA,IAAX;AACH;AAHa,CAAlB;AAKA,IAAMG,OAAO,GAAG;AACNC,EAAAA,OADM,yBACcC,KADd,EACqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAjBC,cAAAA,MAAiB,QAAjBA,MAAiB;AAAA;AAAA,qBACVV,UAAU,CAACS,KAAD,CADA;;AAAA;AACzBE,cAAAA,MADyB;;AAAA,oBAEzBA,MAAM,CAACP,IAAP,IAAe,GAFU;AAAA;AAAA;AAAA;;AAGzBM,cAAAA,MAAM,CAAC,SAAD,EAAYC,MAAM,CAACC,IAAnB,CAAN;AAHyB,+CAIlB,IAJkB;;AAAA;AAAA,+CAMlBC,OAAO,CAACC,MAAR,CAAe,IAAIC,KAAJ,CAAU,OAAV,CAAf,CANkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQhC,GATW;AAUNC,EAAAA,YAVM,+BAUmBJ,IAVnB,EAUyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAhBF,cAAAA,MAAgB,SAAhBA,MAAgB;AAAA;AAAA,qBACdT,eAAe,CAACW,IAAD,CADD;;AAAA;AAC7BD,cAAAA,MAD6B;;AAAA,oBAE7BA,MAAM,CAACP,IAAP,IAAe,GAFc;AAAA;AAAA;AAAA;;AAAA,gDAGtB,IAHsB;;AAAA;AAAA,gDAKtBS,OAAO,CAACC,MAAR,CAAe,IAAIC,KAAJ,CAAU,MAAV,CAAf,CALsB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOpC,GAjBW;AAkBNE,EAAAA,SAlBM,4BAkBgBL,IAlBhB,EAkBsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAhBF,cAAAA,MAAgB,SAAhBA,MAAgB;AAAA;AAAA,qBACXR,YAAY,CAACU,IAAD,CADD;;AAAA;AAC1BD,cAAAA,MAD0B;;AAAA,oBAE1BA,MAAM,CAACP,IAAP,IAAe,GAFW;AAAA;AAAA;AAAA;;AAG1BM,cAAAA,MAAM,CAAC,MAAD,CAAN;AAH0B,gDAInB,IAJmB;;AAAA;AAAA,gDAMnBG,OAAO,CAACC,MAAR,CAAe,IAAIC,KAAJ,CAAU,MAAV,CAAf,CANmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQjC;AA1BW,CAAhB;AA4BA,IAAMG,OAAO,GAAG,EAAhB;AACA,eAAe;AACXf,EAAAA,KAAK,EAALA,KADW;AACLE,EAAAA,SAAS,EAATA,SADK;AACKE,EAAAA,OAAO,EAAPA,OADL;AACaW,EAAAA,OAAO,EAAPA;AADb,CAAf","sourcesContent":["import { reqGetCode,reqUserRegister,reqUserLogin } from \"@/api\"\r\nconst state = {\r\n    code:''\r\n}\r\nconst mutations = {\r\n    GETCODE(state, code) {\r\n        state.code=code\r\n    }\r\n}\r\nconst actions = {\r\n    async getCode({ commit }, phone) {\r\n        let result = await reqGetCode(phone)\r\n        if (result.code == 200) {\r\n            commit('GETCODE', result.data)\r\n            return 'ok'\r\n        } else {\r\n            return Promise.reject(new Error('faile'))\r\n        }\r\n    },\r\n    async userRegister({ commit }, data) {\r\n        let result = await reqUserRegister(data)\r\n        if (result.code == 200) {\r\n            return 'ok'\r\n        } else {\r\n            return Promise.reject(new Error('注册失败'))\r\n        }\r\n    },\r\n    async userLogin({ commit }, data) {\r\n        let result = await reqUserLogin(data)\r\n        if (result.code == 200) {\r\n            commit('USER')\r\n            return 'ok'\r\n        } else {\r\n            return Promise.reject(new Error('登录失败'))\r\n        }\r\n    }\r\n}\r\nconst getters = {}\r\nexport default {\r\n    state,mutations,actions,getters\r\n}\r\n"]},"metadata":{},"sourceType":"module"}