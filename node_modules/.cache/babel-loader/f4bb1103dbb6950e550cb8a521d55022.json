{"ast":null,"code":"import _asyncToGenerator from \"E:/VueProject/project-SPH/app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport { reqGoodsInfo, reqAddOrUpdateShopCart } from \"@/api\";\nvar state = {\n  goodInfo: {}\n};\nvar mutations = {\n  GETGOODINFO: function GETGOODINFO(state, goodInfo) {\n    state.goodInfo = goodInfo;\n  }\n};\nvar actions = {\n  getGoodInfo: function getGoodInfo(_ref, skuId) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var commit, result;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              _context.next = 3;\n              return reqGoodsInfo(skuId);\n\n            case 3:\n              result = _context.sent;\n\n              if (result.code == 200) {\n                commit('GETGOODINFO', result.data);\n              }\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  AddOrUpdateShopCart: function (_AddOrUpdateShopCart) {\n    function AddOrUpdateShopCart(_x) {\n      return _AddOrUpdateShopCart.apply(this, arguments);\n    }\n\n    AddOrUpdateShopCart.toString = function () {\n      return _AddOrUpdateShopCart.toString();\n    };\n\n    return AddOrUpdateShopCart;\n  }(function (_ref2) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n      var skuId, skuNum, result;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              skuId = _ref2.skuId, skuNum = _ref2.skuNum;\n              _context2.next = 3;\n              return AddOrUpdateShopCart(skuId, skuNum);\n\n            case 3:\n              result = _context2.sent;\n              alert(J);\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }))();\n  })\n};\nvar getters = {\n  categoryView: function categoryView(state) {\n    return state.goodInfo.categoryView || {};\n  },\n  skuInfo: function skuInfo(state) {\n    return state.goodInfo.skuInfo || {};\n  },\n  spuSaleAttrList: function spuSaleAttrList(state) {\n    return state.goodInfo.spuSaleAttrList || [];\n  }\n};\nexport default {\n  state: state,\n  mutations: mutations,\n  actions: actions,\n  getters: getters\n};","map":{"version":3,"sources":["E:/VueProject/project-SPH/app/src/store/detail/index.js"],"names":["reqGoodsInfo","reqAddOrUpdateShopCart","state","goodInfo","mutations","GETGOODINFO","actions","getGoodInfo","skuId","commit","result","code","data","AddOrUpdateShopCart","skuNum","alert","J","getters","categoryView","skuInfo","spuSaleAttrList"],"mappings":";;;;AAAA,SAASA,YAAT,EAAsBC,sBAAtB,QAAoD,OAApD;AACA,IAAMC,KAAK,GAAG;AACVC,EAAAA,QAAQ,EAAE;AADA,CAAd;AAGA,IAAMC,SAAS,GAAG;AACdC,EAAAA,WADc,uBACFH,KADE,EACKC,QADL,EACe;AACzBD,IAAAA,KAAK,CAACC,QAAN,GAAiBA,QAAjB;AACH;AAHa,CAAlB;AAKA,IAAMG,OAAO,GAAG;AACNC,EAAAA,WADM,6BACkBC,KADlB,EACyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAjBC,cAAAA,MAAiB,QAAjBA,MAAiB;AAAA;AAAA,qBACdT,YAAY,CAACQ,KAAD,CADE;;AAAA;AAC7BE,cAAAA,MAD6B;;AAEjC,kBAAIA,MAAM,CAACC,IAAP,IAAe,GAAnB,EAAwB;AACpBF,gBAAAA,MAAM,CAAC,aAAD,EAAgBC,MAAM,CAACE,IAAvB,CAAN;AACH;;AAJgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKpC,GANW;AAONC,EAAAA,mBAPM;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAOiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAjBL,cAAAA,KAAiB,SAAjBA,KAAiB,EAAVM,MAAU,SAAVA,MAAU;AAAA;AAAA,qBACtBD,mBAAmB,CAACL,KAAD,EAAQM,MAAR,CADG;;AAAA;AACrCJ,cAAAA,MADqC;AAEzCK,cAAAA,KAAK,CAACC,CAAD,CAAL;;AAFyC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAG5C,GAVW;AAAA,CAAhB;AAYA,IAAMC,OAAO,GAAG;AACZC,EAAAA,YADY,wBACChB,KADD,EACQ;AAChB,WAAOA,KAAK,CAACC,QAAN,CAAee,YAAf,IAA+B,EAAtC;AACH,GAHW;AAIZC,EAAAA,OAJY,mBAIJjB,KAJI,EAIG;AACX,WAAOA,KAAK,CAACC,QAAN,CAAegB,OAAf,IAA0B,EAAjC;AACH,GANW;AAOZC,EAAAA,eAPY,2BAOIlB,KAPJ,EAOW;AACnB,WAAOA,KAAK,CAACC,QAAN,CAAeiB,eAAf,IAAgC,EAAvC;AACH;AATW,CAAhB;AAWA,eAAe;AACXlB,EAAAA,KAAK,EAALA,KADW;AACJE,EAAAA,SAAS,EAATA,SADI;AACOE,EAAAA,OAAO,EAAPA,OADP;AACgBW,EAAAA,OAAO,EAAPA;AADhB,CAAf","sourcesContent":["import { reqGoodsInfo,reqAddOrUpdateShopCart } from \"@/api\"\r\nconst state = {\r\n    goodInfo: {}\r\n}\r\nconst mutations = {\r\n    GETGOODINFO(state, goodInfo) {\r\n        state.goodInfo = goodInfo\r\n    }\r\n}\r\nconst actions = {\r\n    async getGoodInfo({ commit }, skuId) {\r\n        let result = await reqGoodsInfo(skuId)\r\n        if (result.code == 200) {\r\n            commit('GETGOODINFO', result.data)\r\n        }\r\n    },\r\n    async AddOrUpdateShopCart({ skuId, skuNum }) {\r\n        let result = await AddOrUpdateShopCart(skuId, skuNum)\r\n        alert(J)\r\n    }\r\n}\r\nconst getters = {\r\n    categoryView(state) {\r\n        return state.goodInfo.categoryView || {}\r\n    },\r\n    skuInfo(state) {\r\n        return state.goodInfo.skuInfo || {}\r\n    },\r\n    spuSaleAttrList(state) {\r\n        return state.goodInfo.spuSaleAttrList||[]\r\n    }\r\n}\r\nexport default {\r\n    state, mutations, actions, getters\r\n}"]},"metadata":{},"sourceType":"module"}