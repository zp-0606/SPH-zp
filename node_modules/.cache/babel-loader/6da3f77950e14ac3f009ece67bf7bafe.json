{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport SearchSelector from \"./SearchSelector/SearchSelector\";\nimport { mapGetters, mapState } from \"vuex\";\nexport default {\n  name: \"Search\",\n\n  data() {\n    return {\n      searchParams: {\n        category3Id: \"\",\n        categoryName: \"\",\n        keyword: \"\",\n        order: \"1:asc\",\n        pageNo: 1,\n        pageSize: 10,\n        props: [],\n        trademark: \"\"\n      }\n    };\n  },\n\n  components: {\n    SearchSelector\n  },\n\n  beforeMount() {\n    Object.assign(this.searchParams, this.$route.query, this.$route.params);\n  },\n\n  mounted() {\n    this.getData();\n  },\n\n  computed: { ...mapGetters([\"goodsList\"]),\n\n    isOne() {\n      return this.searchParams.order.indexOf(1) != -1;\n    },\n\n    isTwo() {\n      return this.searchParams.order.indexOf(2) != -1;\n    },\n\n    isAsc() {\n      return this.searchParams.order.indexOf(\"asc\") != -1;\n    },\n\n    isDesc() {\n      return this.searchParams.order.indexOf(\"desc\") != -1;\n    },\n\n    ...mapState({\n      total: state => state.search.searchList.total\n    })\n  },\n  methods: {\n    getData() {\n      this.$store.dispatch(\"getSearchList\", this.searchParams);\n    },\n\n    removeCategoryName() {\n      this.searchParams.categoryName = undefined;\n      this.searchParams.category1Id = undefined;\n      this.searchParams.category2Id = undefined;\n      this.searchParams.category3Id = undefined;\n      this.getData();\n\n      if (this.$route.params) {\n        this.$router.push({\n          name: \"search\",\n          params: this.$route.params\n        });\n      }\n    },\n\n    removeKeyword() {\n      this.searchParams.keyword = undefined;\n      this.getData();\n      this.$bus.$emit(\"clear\");\n\n      if (this.$route.query) {\n        this.$router.push({\n          name: \"search\",\n          query: this.$route.query\n        });\n      }\n    },\n\n    trademarkInfo(trademark) {\n      this.searchParams.trademark = `${trademark.tmId}:${trademark.tmName}`;\n      this.getData();\n    },\n\n    removeTrademark() {\n      this.searchParams.trademark = undefined;\n      this.getData();\n    },\n\n    attrInfo(attr, attrValue) {\n      let props = `${attr.attrId}:${attrValue}:${attr.attrName}`;\n\n      if (this.searchParams.props.indexOf(props) == -1) {\n        this.searchParams.props.push(props);\n      }\n\n      this.getData();\n    },\n\n    removeAttr(index) {\n      this.searchParams.props.splice(index, 1);\n      this.getData();\n    },\n\n    changeOrder(flag) {\n      let originOrder = this.searchParams.order.split(\":\");\n      let originFlag = originOrder[0];\n      let originSort = originOrder[1];\n      let newOrder = \"\";\n\n      if (flag == originFlag) {\n        newOrder = `${flag}:${originSort == \"desc\" ? \"asc\" : \"desc\"}`;\n      } else {\n        newOrder = `${flag}:${\"desc\"}`;\n      }\n\n      this.searchParams.order = newOrder;\n      this.getData();\n    },\n\n    getPageNo(pageNo) {\n      this.searchParams.pageNo = pageNo;\n      this.getData();\n    }\n\n  },\n  watch: {\n    $route(newValue, oldValue) {\n      Object.assign(this.searchParams, this.$route.query, this.$route.params);\n      this.getData();\n      this.searchParams.category1Id = undefined;\n      this.searchParams.category2Id = undefined;\n      this.searchParams.category3Id = undefined;\n    }\n\n  }\n};","map":null,"metadata":{},"sourceType":"module"}