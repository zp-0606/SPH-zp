{"ast":null,"code":"import _asyncToGenerator from \"E:/VueProject/project-SPH/app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport { reqGetCode } from \"@/api\";\nvar state = {\n  code: ''\n};\nvar mutations = {\n  GETCODE: function GETCODE(state, code) {\n    state.code = code;\n  }\n};\nvar actions = {\n  getCode: function getCode(_ref, phone) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var commit, result;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              _context.next = 3;\n              return reqGetCode(phone);\n\n            case 3:\n              result = _context.sent;\n\n              if (!(result.code == 200)) {\n                _context.next = 9;\n                break;\n              }\n\n              commit('GETCODE', result.data);\n              re;\n              _context.next = 10;\n              break;\n\n            case 9:\n              return _context.abrupt(\"return\", Promise.reject(new Error('faile')));\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  }\n};\nvar getters = {};\nexport default {\n  state: state,\n  mutations: mutations,\n  actions: actions,\n  getters: getters\n};","map":{"version":3,"sources":["E:/VueProject/project-SPH/app/src/store/user/index.js"],"names":["reqGetCode","state","code","mutations","GETCODE","actions","getCode","phone","commit","result","data","re","Promise","reject","Error","getters"],"mappings":";;;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,IAAMC,KAAK,GAAG;AACVC,EAAAA,IAAI,EAAC;AADK,CAAd;AAGA,IAAMC,SAAS,GAAG;AACdC,EAAAA,OADc,mBACNH,KADM,EACCC,IADD,EACO;AACjBD,IAAAA,KAAK,CAACC,IAAN,GAAWA,IAAX;AACH;AAHa,CAAlB;AAKA,IAAMG,OAAO,GAAG;AACNC,EAAAA,OADM,yBACcC,KADd,EACqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAjBC,cAAAA,MAAiB,QAAjBA,MAAiB;AAAA;AAAA,qBACVR,UAAU,CAACO,KAAD,CADA;;AAAA;AACzBE,cAAAA,MADyB;;AAAA,oBAEzBA,MAAM,CAACP,IAAP,IAAe,GAFU;AAAA;AAAA;AAAA;;AAGzBM,cAAAA,MAAM,CAAC,SAAD,EAAYC,MAAM,CAACC,IAAnB,CAAN;AACAC,cAAAA,EAAE;AAJuB;AAAA;;AAAA;AAAA,+CAMlBC,OAAO,CAACC,MAAR,CAAe,IAAIC,KAAJ,CAAU,OAAV,CAAf,CANkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQhC;AATW,CAAhB;AAWA,IAAMC,OAAO,GAAG,EAAhB;AACA,eAAe;AACXd,EAAAA,KAAK,EAALA,KADW;AACLE,EAAAA,SAAS,EAATA,SADK;AACKE,EAAAA,OAAO,EAAPA,OADL;AACaU,EAAAA,OAAO,EAAPA;AADb,CAAf","sourcesContent":["import { reqGetCode } from \"@/api\"\r\nconst state = {\r\n    code:''\r\n}\r\nconst mutations = {\r\n    GETCODE(state, code) {\r\n        state.code=code\r\n    }\r\n}\r\nconst actions = {\r\n    async getCode({ commit }, phone) {\r\n        let result = await reqGetCode(phone)\r\n        if (result.code == 200) {\r\n            commit('GETCODE', result.data)\r\n            re\r\n        } else {\r\n            return Promise.reject(new Error('faile'))\r\n        }\r\n    }\r\n}\r\nconst getters = {}\r\nexport default {\r\n    state,mutations,actions,getters\r\n}\r\n"]},"metadata":{},"sourceType":"module"}