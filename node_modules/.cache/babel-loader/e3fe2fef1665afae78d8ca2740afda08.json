{"ast":null,"code":"import _defineProperty from \"E:/VueProject/project-SPH/app/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _asyncToGenerator from \"E:/VueProject/project-SPH/app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport { reqCartList, reqDeleteCartById } from \"@/api\";\nvar state = {\n  cartList: []\n};\nvar mutations = {\n  GETCARTLIST: function GETCARTLIST(state, cartList) {\n    state.cartList = cartList;\n  }\n};\n\nvar actions = _defineProperty({\n  getCartList: function getCartList(_ref) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var commit, result;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              _context.next = 3;\n              return reqCartList();\n\n            case 3:\n              result = _context.sent;\n\n              if (result.code == 200) {\n                commit('GETCARTLIST', result.data);\n              }\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  }\n}, \"getCartList\", function getCartList(_ref2, skuId) {\n  return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n    var commit, result;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            commit = _ref2.commit;\n            _context2.next = 3;\n            return reqDeleteCartById(skuId);\n\n          case 3:\n            result = _context2.sent;\n\n            if (!(result.code == 200)) {\n              _context2.next = 8;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", 'ok');\n\n          case 8:\n            return _context2.abrupt(\"return\", Pr);\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }))();\n});\n\nvar getters = {\n  cartInfo: function cartInfo(state) {\n    return state.cartList[0] || {};\n  }\n};\nexport default {\n  state: state,\n  mutations: mutations,\n  actions: actions,\n  getters: getters\n};","map":{"version":3,"sources":["E:/VueProject/project-SPH/app/src/store/shopcart/index.js"],"names":["reqCartList","reqDeleteCartById","state","cartList","mutations","GETCARTLIST","actions","getCartList","commit","result","code","data","skuId","Pr","getters","cartInfo"],"mappings":";;;AAAA,SAASA,WAAT,EAAqBC,iBAArB,QAA8C,OAA9C;AACA,IAAMC,KAAK,GAAG;AACVC,EAAAA,QAAQ,EAAC;AADC,CAAd;AAGA,IAAMC,SAAS,GAAG;AACdC,EAAAA,WADc,uBACFH,KADE,EACKC,QADL,EACe;AACzBD,IAAAA,KAAK,CAACC,QAAN,GAAeA,QAAf;AACJ;AAHc,CAAlB;;AAKA,IAAMG,OAAO;AACHC,EAAAA,WADG,6BACqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAVC,cAAAA,MAAU,QAAVA,MAAU;AAAA;AAAA,qBACPR,WAAW,EADJ;;AAAA;AACtBS,cAAAA,MADsB;;AAE1B,kBAAIA,MAAM,CAACC,IAAP,IAAe,GAAnB,EAAwB;AACpBF,gBAAAA,MAAM,CAAC,aAAD,EAAeC,MAAM,CAACE,IAAtB,CAAN;AACH;;AAJyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAK7B;AANQ,8CAOqBC,KAPrB,EAO4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAjBJ,YAAAA,MAAiB,SAAjBA,MAAiB;AAAA;AAAA,mBACdP,iBAAiB,CAACW,KAAD,CADH;;AAAA;AAC7BH,YAAAA,MAD6B;;AAAA,kBAE7BA,MAAM,CAACC,IAAP,IAAe,GAFc;AAAA;AAAA;AAAA;;AAAA,8CAGtB,IAHsB;;AAAA;AAAA,8CAKtBG,EALsB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOpC,CAdQ,CAAb;;AAgBA,IAAMC,OAAO,GAAG;AACZC,EAAAA,QADY,oBACHb,KADG,EACI;AACZ,WAAOA,KAAK,CAACC,QAAN,CAAe,CAAf,KAAmB,EAA1B;AACH;AAHW,CAAhB;AAKA,eAAe;AACXD,EAAAA,KAAK,EAALA,KADW;AACJE,EAAAA,SAAS,EAATA,SADI;AACOE,EAAAA,OAAO,EAAPA,OADP;AACgBQ,EAAAA,OAAO,EAAPA;AADhB,CAAf","sourcesContent":["import { reqCartList,reqDeleteCartById } from \"@/api\"\r\nconst state = {\r\n    cartList:[]\r\n}\r\nconst mutations = {\r\n    GETCARTLIST(state, cartList) {\r\n        state.cartList=cartList\r\n   }\r\n}\r\nconst actions = {\r\n    async getCartList({ commit }) {\r\n        let result = await reqCartList()\r\n        if (result.code == 200) {\r\n            commit('GETCARTLIST',result.data)\r\n        }\r\n    },\r\n    async getCartList({ commit }, skuId) {\r\n        let result = await reqDeleteCartById(skuId)\r\n        if (result.code == 200) {\r\n            return 'ok'\r\n        } else {\r\n            return Pr\r\n        }\r\n    }\r\n}\r\nconst getters = {\r\n    cartInfo(state) {\r\n        return state.cartList[0]||{}\r\n    }\r\n}\r\nexport default {\r\n    state, mutations, actions, getters\r\n}"]},"metadata":{},"sourceType":"module"}